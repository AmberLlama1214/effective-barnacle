package org.firstinspires.ftc.robotcontroller.external.samples;

import com.qualcomm.robotcore.eventloop.opmode.OpMode;

import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.util.Range;
//import com.qualcomm.robotcore.hardware.Servo;


public class junkbot3 extends OpMode {
    DcMotor motorFRight;
    DcMotor motorFLeft;
    DcMotor motorBRight;
    DcMotor motorBLeft;
    DcMotor eating;
    DcMotor shooting;
    //Servo shotangle;
    public junkbot3() {

    }

    @Override
    public void init() {
        motorFRight = hardwareMap.dcMotor.get("motor_2");
        motorFLeft = hardwareMap.dcMotor.get("motor_1");
        motorBRight = hardwareMap.dcMotor.get("motor_4");
        motorBLeft = hardwareMap.dcMotor.get("motor_3");
        eating = hardwareMap.dcMotor.get("eating");
        shooting = hardwareMap.dcMotor.get("shooting");
        //shotangle = hardwareMap.servo.get("angle");
        motorFRight.setDirection(DcMotor.Direction.REVERSE);
        motorBRight.setDirection(DcMotor.Direction.REVERSE);


    }

    @Override
    public void loop() {
        float left = -gamepad1.left_stick_y;
        float right = -gamepad1.right_stick_y;
        float front = -gamepad2.right_stick_y;
        double shoot = 1.0;
        double shoot2 = 0.8;
        double shoot3 = 0.6;
        double shoot4 = 0.4;
        double shoot5 = 0.2;
        //double x = i += shoot;
        //i=x+3;

        right = Range.clip(right, -1, 1);
        left = Range.clip(left, -1, 1);
        front = Range.clip(front, -1,1);
        //if (gamepad1.left_bumper){
            //eating.setPower(1.0);
        //}
        //else if (gamepad1.right_bumper) {
            //eating.setPower(-1.0);
        //}
        //else{
            //eating.setPower(0.0);
        //}
        if (gamepad2.x){
            shooting.setPower(shoot);
        }

        //if (gamepad2.dpad_down){
        //shoot *= 0.5;
        //shooting.setPower(shoot);
        //}
        //if (gamepad2.dpad_up) {
        //shoot *= 2.0;
        //shooting.setPower(shoot);
        //}

        if (gamepad2.right_bumper){
            shooting.setPower(shoot2);
        }

        if (gamepad2.left_bumper){
            shooting.setPower(shoot3);
        }

        if (gamepad2.dpad_up) {
            shooting.setPower(shoot4);
        }

        if (gamepad2.dpad_down) {
            shooting.setPower(shoot5);
        }
        else {
            shooting.setPower(0);
        }
        right = (float) scaleInput(right);
        left = (float) scaleInput(left);
        front = (float)scaleInput(front);

        motorFRight.setPower(right);
        motorFLeft.setPower(left);
        motorBRight.setPower(right);
        motorBLeft.setPower(left);
        eating.setPower(front);
    }

    @Override
    public void stop() {

    }

    double scaleInput(double dVal) {
        double[] scaleArray = {0.0, 0.05, 0.09, 0.10, 0.12, 0.15, 0.18, 0.24, 0.30, 0.36, 0.43, 0.50, 0.60, 0.72, 0.85, 1.00, 1.00};

        int index = (int) (dVal * 16.0);
        if (index < 0) {
            index = -index;
        }

        if (index > 16) {




            index = 16;
        }

        double dScale = 0.0;
        if (dVal < 0) {
            dScale = -scaleArray[index];
        } else {
            dScale = scaleArray[index];
        }

        return dScale;

    }
}
